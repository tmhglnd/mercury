"use strict";(self.webpackChunkmercury_docs=self.webpackChunkmercury_docs||[]).push([[485],{7163:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=s(4848),l=s(8453);const r={sidebar_position:6},t="\ud83d\udce6 Add Mercury in your Site",a={id:"usage/embedding",title:"\ud83d\udce6 Add Mercury in your Site",description:"It is also possible to include Mercury in your own website. This is done with the mercury-engine. The engine is available as a package on npmjs.com or via unpkg.com.",source:"@site/docs/usage/embedding.md",sourceDirName:"usage",slug:"/usage/embedding",permalink:"/mercury/docs/usage/embedding",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udea7 Troubleshooting",permalink:"/mercury/docs/usage/troubleshooting"},next:{title:"\ud83d\udee0 Extending Mercury",permalink:"/mercury/docs/usage/extending"}},c={},d=[{value:"Examples",id:"examples",level:2},{value:"Install",id:"install",level:2},{value:"Install in node_modules",id:"install-in-node_modules",level:3},{value:"Include in html",id:"include-in-html",level:3},{value:"Examples",id:"examples-1",level:3},{value:"Usage",id:"usage",level:2},{value:"Include and initialize",id:"include-and-initialize",level:4},{value:"Resume, evaluate and silence",id:"resume-evaluate-and-silence",level:4},{value:"Samples",id:"samples",level:4},{value:"Recording",id:"recording",level:4},{value:"Meter",id:"meter",level:4},{value:"MIDI",id:"midi",level:4},{value:"Settings",id:"settings",level:4},{value:"Log function listener",id:"log-function-listener",level:4},{value:"DOM elements from P5js",id:"dom-elements-from-p5js",level:4}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"-add-mercury-in-your-site",children:"\ud83d\udce6 Add Mercury in your Site"}),"\n",(0,i.jsxs)(n.p,{children:["It is also possible to include Mercury in your own website. This is done with the ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/mercury-engine",children:(0,i.jsx)(n.code,{children:"mercury-engine"})}),". The engine is available as a package on npmjs.com or via unpkg.com."]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["For examples of the Engine used in ",(0,i.jsx)(n.code,{children:".html"})," pages please ",(0,i.jsx)(n.a,{href:"https://github.com/tmhglnd/mercury-engine",children:"download the repository from github"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Navigate to the folder ",(0,i.jsx)(n.code,{children:"cd mercury-engine"})]}),"\n",(0,i.jsxs)(n.li,{children:["Start a localhost server with for example by running ",(0,i.jsx)(n.code,{children:"npx http-server"})," (",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/http-server",children:"install http-server"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:["Go to ",(0,i.jsx)(n.code,{children:"http://localhost:8080"})," (or whichever port is assigned by the http-server) and got to ",(0,i.jsx)(n.code,{children:"examples/"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"install",children:"Install"}),"\n",(0,i.jsx)(n.h3,{id:"install-in-node_modules",children:"Install in node_modules"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"$ npm install mercury-engine\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const { Mercury } = require('mercury-engine');\n\nconst Engine = new Mercury();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"include-in-html",children:"Include in html"}),"\n",(0,i.jsx)(n.p,{children:"Include latest or a specific version of distribution (minified, es5) through url in script index.html"}),"\n",(0,i.jsx)(n.p,{children:"Recommended for most cases:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<script src="https://unpkg.com/mercury-engine/dist/mercury.min.es5.js"><\/script>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Other options:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<script src="https://unpkg.com/mercury-engine/dist/mercury.js"><\/script>\n<script src="https://unpkg.com/mercury-engine@1.0.0/dist/mercury.min.js"><\/script>\n<script src="https://unpkg.com/mercury-engine@1.0.0/dist/mercury.min.es5.js"><\/script>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Load the engine in the ",(0,i.jsx)(n.code,{children:"<script>"})," code like so:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const { Mercury } = MercuryEngine;\n\nconst Engine = new Mercury();\n"})}),"\n",(0,i.jsx)(n.h3,{id:"examples-1",children:"Examples"}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.code,{children:"examples"})," folder for a few ",(0,i.jsx)(n.code,{children:".html"})," files that demonstrate the usage. Run them locally by cloning this repository with ",(0,i.jsx)(n.code,{children:"git clone https://github.com/tmhglnd/mercury-engine"}),". Then ",(0,i.jsx)(n.code,{children:"cd mercury-engine"})," and run a simple http-server, for example with the ",(0,i.jsx)(n.code,{children:"http-server"})," node package (install globally with ",(0,i.jsx)(n.code,{children:"npm i -g http-server"}),"). Navigate to ",(0,i.jsx)(n.code,{children:"localhost:8080/examples"})," and try them out."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h4,{id:"include-and-initialize",children:"Include and initialize"}),"\n",(0,i.jsx)(n.p,{children:"Include the package"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const { Mercury } = require('mercury-engine');\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Initialize the engine and include a callback function through ",(0,i.jsx)(n.code,{children:"{ onload: }"}),", this will be executed when samples are loaded."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const Engine = Mercury({\n\tonload: () => {\n\t\tconsole.log('This callback is called when samples are loaded!');\n\t\tconsole.log('The loaded samples:', Engine.getBuffers());\n\t}\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"resume-evaluate-and-silence",children:"Resume, evaluate and silence"}),"\n",(0,i.jsx)(n.p,{children:"Resume the transport and start the webaudio. This has to be done from a user interaction (click or keypress) to allow sound to play from the browser window."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.resume();\n"})}),"\n",(0,i.jsx)(n.p,{children:"Evaluate a mercury code file by providing a string of code. This also resumes the transport if .resume() was not called yet."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.code(`\n\tset tempo 100\n\tnew sample kick_909 time(1/4)\n\tnew sample hat_909 time(1/4 1/8) gain(0.6)\n\tnew synth saw note(0 0) time(1/16) shape(1 80)\n`);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Stop the transport and silence the audio"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.silence();\n"})}),"\n",(0,i.jsx)(n.p,{children:"Return the last succesfully evaluated code. If code is evaluated that resulted in an error it is not stored."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.getCode();\n"})}),"\n",(0,i.jsx)(n.h4,{id:"samples",children:"Samples"}),"\n",(0,i.jsx)(n.p,{children:"Add your own samples from for example a url like raw github or freesound. The url can also contain a .json file that references multiple samples and the sample name."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.addBuffers(files, callback);\n"})}),"\n",(0,i.jsx)(n.p,{children:"For example use a json file containing sample names and urls"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.addBuffers('https://raw.githubusercontent.com/tmhglnd/mercury-engine/main/examples/samples/freesound-samples.json');\n"})}),"\n",(0,i.jsx)(n.p,{children:"Or load samples directly by creating an array of urls"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"let s1 = 'https://cdn.freesound.org/previews/671/671221_3797507-lq.mp3';\nlet s2 = 'https://cdn.freesound.org/previews/145/145778_2101444-lq.mp3';\n\nEngine.addBuffers([s1, s2]);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Add a callback function, this is called when all samples are loaded"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.addBuffers('https://someurl.json', () => {\n\tconsole.log('This callback is called when samples are loaded!');\n\tconsole.log('The loaded samples:', Engine.getBuffers());\n});\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Get the content of all the loaded Buffers, this is returned as a ",(0,i.jsx)(n.code,{children:"ToneAudioBuffers"})," class"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.getBuffers();\n"})}),"\n",(0,i.jsx)(n.h4,{id:"recording",children:"Recording"}),"\n",(0,i.jsx)(n.p,{children:"Start the recording of the sound"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.record(true);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns 'started' if the recording is on"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.isRecording();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Stop the recording and download the file ",(0,i.jsx)(n.code,{children:"myRecording.webm"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.record(false, 'myRecording');\n"})}),"\n",(0,i.jsx)(n.h4,{id:"meter",children:"Meter"}),"\n",(0,i.jsx)(n.p,{children:"You can add a meter to the main audio output and poll for the amplitude value from the meter to for example create audio-reactive visuals in other programming languages such as Hydra or P5.js."}),"\n",(0,i.jsx)(n.p,{children:"First add the meter, optionally with a smoothing factor (default=0.7)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.addMeter();\n"})}),"\n",(0,i.jsx)(n.p,{children:"Get the meter value as floating-point between 0-1"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.getMeter();\n"})}),"\n",(0,i.jsx)(n.p,{children:"Store the meters amplitude value in a global variable for usage in other places and update regularly with a setInterval at a defined interval in milliseconds."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"let amp;\n\nsetInterval(() => amp = Engine.getMeter(), 100);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For example control some visual parameter in ",(0,i.jsx)(n.a,{href:"https://hydra.ojack.xyz",children:"Hydra"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"osc(10, 0.2, () => amp * 20).out();\n"})}),"\n",(0,i.jsx)(n.h4,{id:"midi",children:"MIDI"}),"\n",(0,i.jsxs)(n.p,{children:["WebMIDI is included and started if the browser is compatible with it. If not, an error will be printed to the console. You can provide a callback function ",(0,i.jsx)(n.code,{children:"onmidi"})," to execute some code when the WebMIDI enabling was succesful."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"const Engine = Mercury({\n\tonmidi: () => {\n\t\tconsole.log('The WebMIDI status is:', Engine.midi.status);\n\t\tconsole.log('With inputs:', Engine.midi.inputs);\n\t\tconsole.log('And outputs:', Engine.midi.outputs);\n\t}\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"settings",children:"Settings"}),"\n",(0,i.jsxs)(n.p,{children:["Set the BPM without using ",(0,i.jsx)(n.code,{children:"set tempo"})," in the Mercury code"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.setBPM(140);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set a randomized BPM"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.randomBPM();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Set the volume without using ",(0,i.jsx)(n.code,{children:"set volume"})," in the Mercury code. Volume in floating amplitude 0 to 1."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.setVolume(0.5);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Set the crossFade between 2 code evaluations without using ",(0,i.jsx)(n.code,{children:"set crossFade"})," in the Mercury code. Time in milliseconds."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.setCrossFade(500);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Set the HighPass Filter cutoff frequency without using ",(0,i.jsx)(n.code,{children:"set highPass"})," in the Mercury code."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.setHighPass(400);\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Set the LowPass Filter cutoff frequency without using ",(0,i.jsx)(n.code,{children:"set lowPass"})," in the Mercury code."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"Engine.setLowPass(5000);\n"})}),"\n",(0,i.jsx)(n.p,{children:"Get the value for any of the settings"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"console.log(Engine.bpm);\nconsole.log(Engine.volume);\nconsole.log(Engine.crossFade);\nconsole.log(Engine.highPass);\nconsole.log(Engine.lowPass);\n"})}),"\n",(0,i.jsx)(n.h4,{id:"log-function-listener",children:"Log function listener"}),"\n",(0,i.jsxs)(n.p,{children:["Logs that are important for the Mercury coder are also emitted as a custom event in the browser. You can create an event listener for ",(0,i.jsx)(n.code,{children:"mercuryLog"}),". The ",(0,i.jsx)(n.code,{children:"e.detail"})," contains the printed message. This can be used to for example print things to custom html elements instead of the javascript console."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"window.addEventListener('mercuryLog', (e) => {\n\tlet p = JSON.stringify(e.detail).replace(/\\,/g, ' ').replace(/\\\"/g, '');\n\tdocument.getElementById('logger').innerHTML += `${p}<br>`;\n\tconsole.log('customprint:', e.detail);\n});\n"})}),"\n",(0,i.jsx)(n.h4,{id:"dom-elements-from-p5js",children:"DOM elements from P5js"}),"\n",(0,i.jsxs)(n.p,{children:["It is possible to control parameters from instruments in the Mercury code by writing a string that contains ",(0,i.jsx)(n.code,{children:"{}"})," with the js code inside to get the dom value. For example when using DOM elements from the P5js library, such as sliders, they can be used in the code."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"let slider;\n\n// p5js setup function\nfunction setup() {\n\tnoCanvas();\n\t// create a slider with range 50 - 5000, initial 1000\n\tslider = createSlider(50, 5000, 1000, 0);\n}\n\n// use the slider value as a cutoff frequency for the filter\nEngine.code(`new synth saw note(0 0) fx(filter low '{slider.value()}' 0.4)`);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const l={},r=i.createContext(l);function t(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);